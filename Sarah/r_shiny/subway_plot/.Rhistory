lat_coord = stop[stop$stop_lat]
head(lat_coord)
lat_coord = stop[stop$stop_lat]
head(lat_coord)
shiny::runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
summary(real_updates)
summary(real_updates)
library(leaflet)
library(maptools)
library(maps)
library(shiny)
library(data.table)
shape <- read.csv('/Users/sarahcha/Documents/W205/final_project/google_transit/shapes.txt')
stop <- read.csv('/Users/sarahcha/Documents/W205/final_project/google_transit/stops.txt')
##pulling out latitude and longitude coordinates for stops
stop$stop_lon <- as.numeric(stop$stop_lon)
lons = stop$stop_lon
stop$stop_lat <- as.numeric(stop$stop_lat)
lats = stop$stop_lat
stop_id = stop$stop_id
stop_coord = data.frame(stop= stop_id, lons = lons,lats = lats )
stop_coord[complete.cases(stop_coord), ]
shape$shape_id
ids <- unique(shape$shape_id)
shape_orig <- shape
#length(ids)
###creating a spatial object to map subway lines
for(i in 1:10){
shape <- shape_orig[shape_orig$shape_id == ids[i],]
shape_map <- list(x = shape$shape_pt_lon, y = shape$shape_pt_lat)
shape_temp <- map2SpatialLines(shape_map, IDs = ids[i])
#shape_lines <- spRbind(shape_lines, shape_temp)
}
####processing updates
updates <- read.csv('/Users/sarahcha/Documents/W205/final_project/batch_data/trip_update.csv')
unique_stop_ids <- unique(updates$stop_id)
updates$arrival_delay <- as.numeric(updates$arrival_delay)
updates$departure_delay <- as.numeric(updates$departure_delay)
##create a dataframe that will have stop id, coordinates + updates
updates_df = data.frame(unique_stop = unique_stop_ids, lat_coord = seq(0,0,length.out=length(stop_ids)), lon_coord = seq(0,0,length.out=length(stop_ids)) )
##functions to map coordinates to each of the stops
find_lat <- function(unique_stop){
lat = stop_coord[stop_coord$stop_id == unique_stop, 3]
return (lat)
}
find_lon <- function(unique_stop){
lon = stop_coord[stop_coord$stop_id == unique_stop, 2]
return (lon)
}
updates_df["lat_coord"] <- apply(updates_df[1], 1, find_lat)
updates_df["lon_coord"] <- apply(updates_df[1], 1, find_lon)
real_time_data_table =data.table(updates)
real_time_data_table_adj = real_time_data_table[, list(train_queue = sum (arrival_delay > 0 , departure_delay > 0 ), length (arrival_delay[arrival_delay != 0])+ length (departure_delay[departure_delay != 0]), freq = .N), by = c("stop_id")]
head(real_time_data_table_adj)
real_updates = cbind(updates_df, real_time_data_table_adj)
real_updates$lat_coord <- as.numeric(real_updates$lat_coord)
real_updates$lon_coord <- as.numeric(real_updates$lon_coord)
real_updates$train_queue <- as.numeric(real_updates$train_queue)
real_updates$radius <- real_updates$train_queue * 5
m <- leaflet() %>%
addTiles() %>%
addPolylines(data = shape_temp, color = 'blue')
m %>% addCircles(data = stop_coord, lat = ~ lats, lng = ~ lons)
m %>% addCircleMarkers(data = real_updates, lat = ~lat_coord, lng = ~lon_coord, radius = ~radius, color = "yellow")
summary(real_updates)
summary(real_updates$radius)
head(real_updates)
head(real_time_data_table_adj)
real_updates = cbind(updates_df, real_time_data_table_adj)
real_updates$lat_coord <- as.numeric(real_updates$lat_coord)
real_updates$lon_coord <- as.numeric(real_updates$lon_coord)
real_updates$train_queue <- as.numeric(real_updates$train_queue)
real_updates$radius <- real_updates$train_queue * 5
shape <- read.csv('/Users/sarahcha/Documents/W205/final_project/google_transit/shapes.txt')
stop <- read.csv('/Users/sarahcha/Documents/W205/final_project/google_transit/stops.txt')
##pulling out latitude and longitude coordinates for stops
stop$stop_lon <- as.numeric(stop$stop_lon)
lons = stop$stop_lon
stop$stop_lat <- as.numeric(stop$stop_lat)
lats = stop$stop_lat
stop_id = stop$stop_id
stop_coord = data.frame(stop= stop_id, lons = lons,lats = lats )
stop_coord[complete.cases(stop_coord), ]
shape$shape_id
ids <- unique(shape$shape_id)
shape_orig <- shape
#length(ids)
for(i in 1:10){
shape <- shape_orig[shape_orig$shape_id == ids[i],]
shape_map <- list(x = shape$shape_pt_lon, y = shape$shape_pt_lat)
shape_temp <- map2SpatialLines(shape_map, IDs = ids[i])
#shape_lines <- spRbind(shape_lines, shape_temp)
}
updates <- read.csv('/Users/sarahcha/Documents/W205/final_project/batch_data/trip_update.csv')
unique_stop_ids <- unique(updates$stop_id)
updates$arrival_delay <- as.numeric(updates$arrival_delay)
updates$departure_delay <- as.numeric(updates$departure_delay)
##create a dataframe that will have stop id, coordinates + updates
updates_df = data.frame(unique_stop = unique_stop_ids, lat_coord = seq(0,0,length.out=length(stop_ids)), lon_coord = seq(0,0,length.out=length(stop_ids)) )
##functions to map coordinates to each of the stops
find_lat <- function(unique_stop){
lat = stop_coord[stop_coord$stop_id == unique_stop, 3]
return (lat)
}
find_lon <- function(unique_stop){
lon = stop_coord[stop_coord$stop_id == unique_stop, 2]
return (lon)
}
updates_df["lat_coord"] <- apply(updates_df[1], 1, find_lat)
updates_df["lon_coord"] <- apply(updates_df[1], 1, find_lon)
real_time_data_table =data.table(updates)
real_time_data_table_adj = real_time_data_table[, list(train_queue = sum (arrival_delay > 0 , departure_delay > 0 ), length (arrival_delay[arrival_delay != 0])+ length (departure_delay[departure_delay != 0]), freq = .N), by = c("stop_id")]
head(real_time_data_table_adj)
real_updates = cbind(updates_df, real_time_data_table_adj)
real_updates$lat_coord <- as.numeric(real_updates$lat_coord)
real_updates$lon_coord <- as.numeric(real_updates$lon_coord)
real_updates$train_queue <- as.numeric(real_updates$train_queue)
real_updates$radius <- real_updates$train_queue * 5
head(real_time_data_table_adj)
real_updates = cbind(updates_df, real_time_data_table_adj)
real_updates$lat_coord <- as.numeric(real_updates$lat_coord)
real_updates$lon_coord <- as.numeric(real_updates$lon_coord)
real_updates$train_queue <- as.numeric(real_updates$train_queue)
real_updates$radius <- real_updates$train_queue * 5
m <- leaflet() %>%
addTiles() %>%
addPolylines(data = shape_temp, color = 'blue')
m %>% addCircles(data = stop_coord, lat = ~ lats, lng = ~ lons)
m %>% addCircleMarkers(data = real_updates, lat = ~lat_coord, lng = ~lon_coord, radius = ~radius, color = "yellow")
head(real_updates)
head(real_updates$radius)
head(real_time_data_table_adj)
real_updates = cbind(updates_df, real_time_data_table_adj)
real_updates$lat_coord <- as.numeric(real_updates$lat_coord)
real_updates$lon_coord <- as.numeric(real_updates$lon_coord)
real_updates$train_queue <- as.numeric(real_updates$train_queue)
real_updates$radius <- real_updates$train_queue * 5
####processing updates
updates <- read.csv('/Users/sarahcha/Documents/W205/final_project/batch_data/trip_update.csv')
unique_stop_ids <- unique(updates$stop_id)
updates$arrival_delay <- as.numeric(updates$arrival_delay)
updates$departure_delay <- as.numeric(updates$departure_delay)
##create a dataframe that will have stop id, coordinates + updates
updates_df = data.frame(unique_stop = unique_stop_ids, lat_coord = seq(0,0,length.out=length(unique_stop_ids)), lon_coord = seq(0,0,length.out=length(unique_stop_ids)) )
##functions to map coordinates to each of the stops
find_lat <- function(unique_stop){
lat = stop_coord[stop_coord$stop_id == unique_stop, 3]
return (lat)
}
find_lon <- function(unique_stop){
lon = stop_coord[stop_coord$stop_id == unique_stop, 2]
return (lon)
}
updates_df["lat_coord"] <- apply(updates_df[1], 1, find_lat)
updates_df["lon_coord"] <- apply(updates_df[1], 1, find_lon)
real_time_data_table =data.table(updates)
real_time_data_table_adj = real_time_data_table[, list(train_queue = sum (arrival_delay > 0 , departure_delay > 0 ), length (arrival_delay[arrival_delay != 0])+ length (departure_delay[departure_delay != 0]), freq = .N), by = c("stop_id")]
head(real_time_data_table_adj)
real_updates = cbind(updates_df, real_time_data_table_adj)
real_updates$lat_coord <- as.numeric(real_updates$lat_coord)
real_updates$lon_coord <- as.numeric(real_updates$lon_coord)
real_updates$train_queue <- as.numeric(real_updates$train_queue)
real_updates$radius <- real_updates$train_queue * 5
m <- leaflet() %>%
addTiles() %>%
addPolylines(data = shape_temp, color = 'blue')
m %>% addCircles(data = stop_coord, lat = ~ lats, lng = ~ lons)
m %>% addCircleMarkers(data = real_updates, lat = ~lat_coord, lng = ~lon_coord, radius = ~radius, color = "yellow")
head(real_updates$radius)
m %>% addCircle(data = real_updates, lat = ~lat_coord, lng = ~lon_coord, radius = ~radius, color = "yellow")
m %>% addCircleMarkers(data = real_updates, lat = ~lat_coord, lng = ~lon_coord, radius = ~radius, color = "yellow")
summary(real_updates)
summary(updates_df)
stop_coord = data.frame(stop= stop_id, lons = lons,lats = lats )
summary(stop_coord)
head(stop_coord, 10)
head(stop_coord, 50)
summary(stop_coord)
updates <- read.csv('/Users/sarahcha/Documents/W205/final_project/batch_data/trip_update.csv')
unique_stop_ids <- unique(updates$stop_id)
updates$arrival_delay <- as.numeric(updates$arrival_delay)
updates$departure_delay <- as.numeric(updates$departure_delay)
##create a dataframe that will have stop id, coordinates + updates
updates_df = data.frame(unique_stop = unique_stop_ids, lat_coord = seq(0,0,length.out=length(unique_stop_ids)), lon_coord = seq(0,0,length.out=length(unique_stop_ids)) )
##functions to ma
find_lat <- function(unique_stop){
lat = stop_coord[stop_coord$stop_id == unique_stop, 3]
return (lat)
}
find_lon <- function(unique_stop){
lon = stop_coord[stop_coord$stop_id == unique_stop, 2]
return (lon)
}
updates_df["lat_coord"] <- apply(updates_df[1], 1, find_lat)
updates_df["lon_coord"] <- apply(updates_df[1], 1, find_lon)
real_time_data_table =data.table(updates)
real_time_data_table_adj = real_time_data_table[, list(train_queue = sum (arrival_delay > 0 , departure_delay > 0 ), length (arrival_delay[arrival_delay != 0])+ length (departure_delay[departure_delay != 0]), freq = .N), by = c("stop_id")]
real_time_data_table_adj = real_time_data_table[, list(train_queue = sum (arrival_delay > 0 , departure_delay > 0 ), length (arrival_delay[arrival_delay != 0])+ length (departure_delay[departure_delay != 0]), freq = .N), by = c("stop_id")]
head(real_time_data_table_adj)
real_updates = cbind(updates_df, real_time_data_table_adj)
real_updates$lat_coord <- as.numeric(real_updates$lat_coord)
real_updates$lon_coord <- as.numeric(real_updates$lon_coord)
real_updates$train_queue <- as.numeric(real_updates$train_queue)
real_updates$radius <- real_updates$train_queue * 10
summary(updates_df)
apply(updates_df[1], 1, find_lat)
apply('101N', 1, find_lat)
updates_df[1]
updates_df[1]
apply(updates_df[1], 2, find_lat)
apply(updates_df[1], 1, find_lat)
stop_coord
apply(updates_df[1], 1, find_lat)
##functions to map coordinates to each of the stops
find_lat <- function(unique_stop){
lat = stop_coord[stop_coord$stop == unique_stop, 3]
return (lat)
}
find_lon <- function(unique_stop){
lon = stop_coord[stop_coord$stop == unique_stop, 2]
return (lon)
}
apply(updates_df[1], 1, find_lat)
updates_df["lat_coord"] <- apply(updates_df[1], 1, find_lat)
updates_df["lon_coord"] <- apply(updates_df[1], 1, find_lon)
real_time_data_table =data.table(updates)
real_time_data_table_adj = real_time_data_table[, list(train_queue = sum (arrival_delay > 0 , departure_delay > 0 ), length (arrival_delay[arrival_delay != 0])+ length (departure_delay[departure_delay != 0]), freq = .N), by = c("stop_id")]
head(real_time_data_table_adj)
real_updates = cbind(updates_df, real_time_data_table_adj)
real_updates$lat_coord <- as.numeric(real_updates$lat_coord)
real_updates$lon_coord <- as.numeric(real_updates$lon_coord)
real_updates$train_queue <- as.numeric(real_updates$train_queue)
real_updates$radius <- real_updates$train_queue * 10
m <- leaflet() %>%
addTiles() %>%
addPolylines(data = shape_temp, color = 'blue')
m %>% addCircles(data = stop_coord, lat = ~ lats, lng = ~ lons)
m %>% addCircleMarkers(data = real_updates, lat = ~lat_coord, lng = ~lon_coord, radius = ~radius, color = "yellow")
head(real_time_data_table_adj)
real_updates = cbind(updates_df, real_time_data_table_adj)
real_updates$lat_coord <- as.numeric(real_updates$lat_coord)
real_updates$lon_coord <- as.numeric(real_updates$lon_coord)
real_updates$train_queue <- as.numeric(real_updates$train_queue)
real_updates$radius <- real_updates$train_queue * 10
m <- leaflet() %>%
addTiles() %>%
addPolylines(data = shape_temp, color = 'blue')
m %>% addCircles(data = stop_coord, lat = ~ lats, lng = ~ lons)
m %>% addCircleMarkers(data = real_updates, lat = ~lat_coord, lng = ~lon_coord, radius = ~radius, color = "yellow")
head(real_time_data_table_adj)
real_updates = cbind(updates_df, real_time_data_table_adj)
real_updates$lat_coord <- as.numeric(real_updates$lat_coord)
real_updates$lon_coord <- as.numeric(real_updates$lon_coord)
real_updates$train_queue <- as.numeric(real_updates$train_queue)
real_updates$radius <- real_updates$train_queue * 2
m <- leaflet() %>%
addTiles() %>%
addPolylines(data = shape_temp, color = 'blue')
m %>% addCircles(data = stop_coord, lat = ~ lats, lng = ~ lons)
m %>% addCircleMarkers(data = real_updates, lat = ~lat_coord, lng = ~lon_coord, radius = ~radius, color = "yellow")
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
color_fun <- function(train_queue){
if train_queue == 0:
color = 'blue'
else:
color = 'yellow'
return (color)
}
color_fun <- function(train_queue){
if (train_queue == 0) {
color = 'blue'
}
else {
color = 'yellow'
}
return (color)
}
head(real_time_data_table_adj)
real_updates = cbind(updates_df, real_time_data_table_adj)
real_updates$lat_coord <- as.numeric(real_updates$lat_coord)
real_updates$lon_coord <- as.numeric(real_updates$lon_coord)
real_updates$train_queue <- as.numeric(real_updates$train_queue)
real_updates$radius <- real_updates$train_queue * 2
real_updates$color <- apply(real_updates$train_queue, 1, color_fun)
head(real_updates)
apply(real_updates$train_queue, 1, color_fun)
real_updates$color <- apply(real_updates[5], 1, color_fun)
head(real_updates)
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
install.packages('shinydashboard')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
get_region_lat <- function(input){
region <- input$routeSelect
region_options = c("Lower Manhattan", "Midtown" ,"Upper Manhattan", "Queens")
lats = c(40.7163, 40.7549, 40.8116, 40.7282)
return (lats[region])
}
get_region_lat(2)
get_region_lat <- function(input){
region <- input
region_options = c("Lower Manhattan", "Midtown" ,"Upper Manhattan", "Queens")
lats = c(40.7163, 40.7549, 40.8116, 40.7282)
return (lats[region])
}
get_region_lat(2)
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
if (region == 0){
region = 2
}
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
input$routeNum
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
shiny::runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
lons <- as.list(-74.0086, -73.9840, -73.9465, -73.7949)
lons
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
lons[[2]]
lons
lons[4]
lons[[4]]
lons[[1,2]]
#})
lons[[2]]
lons <- list(-74.0086, -73.9840, -73.9465, -73.7949)
lons[[2]]
lons[[3]]
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
shiny::runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
runApp('Documents/W205/final_project/r_shiny/subway_plot')
